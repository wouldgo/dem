{"version":3,"sources":["index.js","renderer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA,AAAC,GAAA,SAAS,SAAS,GAAG;AACpB,gBAAY,CAAC;;AAEb,WAAO,CAAC,GAAG,sBAAU,CAAC;GACvB,CAAA,EAAE,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;ACHL,AAAC,GAAA,SAAS,UAAU,CAAC,MAAM,EAAE;AAC3B,gBAAY,CAAC;;;AAGb,QAAI,KAAK,GAAG,GAAG;QACX,MAAM,GAAG,GAAG;;;AAEZ,cAAU,GAAG,EAAE;QACf,MAAM,GAAG,KAAK,GAAG,MAAM;QACvB,IAAI,GAAG,GAAG;QACV,GAAG,GAAG,KAAK;;;AAEX,cAAU,GAAG,mBAAE,YAAY,CAAC;;;;AAG5B,YAAQ,GAAG,IAAI,kBAAM,aAAa,EAAE;QACpC,MAAM,GAAG,IAAI,kBAAM,iBAAiB,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;QACnE,KAAK,GAAG,IAAI,kBAAM,KAAK,EAAE;QACzB,iBAAiB,GAAG,IAAI,kBAAM,QAAQ,EAAE;QACxC,aAAa,GAAG,IAAI,kBAAM,iBAAiB,CAAC;AAC1C,aAAO,EAAE,QAAQ;AACjB,YAAM,EAAE,kBAAM,UAAU;KACzB,CAAC;QACF,KAAK,GAAG,IAAI,kBAAM,IAAI,CAAC,iBAAiB,EAAE,aAAa,CAAC;;;AAExD,cAAU,GAAG,IAAI,kBAAM,UAAU,CAAC,QAAQ,CAAC,CAAC;;;AAGhD,SAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;;;AAIlB,UAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;;;AAGxB,YAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;AAGhC,cAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;;AAEvC,qBAAiB,CAAC,QAAQ,CAAC,IAAI,CAC7B,IAAI,kBAAM,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAC7B,IAAI,kBAAM,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAC9B,IAAI,kBAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAC9B,CAAC;;AAEF,qBAAiB,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,kBAAM,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC;;AAE3D,qBAAiB,CAAC,qBAAqB,EAAE,CAAC;;AAE1C,SAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;;AAGjB,cAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;AAC3B,cAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;AAC3B,cAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;;;AAG5B,SAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;;;AAGtB,UAAM,CAAC,qBAAqB,CAAC,SAAS,UAAU,GAAG;;AAEjD,cAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAChC,CAAC,CAAC;GACJ,CAAA,CAAC,MAAM,CAAC,CAAE","file":"index.dist.js","sourcesContent":["/*global console*/\nimport Renderer from './renderer.js';\n\n(function inBrowser() {\n  'use strict';\n\n  console.log(Renderer);\n}());\n","/*global window*/\nimport THREE from '../lib/three.js/three.js';\nimport $ from '../lib/jquery/dist/jquery.min.js';\n\n(function plainOldJs(window) {\n  'use strict';\n\n  // set the scene size\n  var WIDTH = 640\n    , HEIGHT = 480\n    // set some camera attributes\n    , VIEW_ANGLE = 45\n    , ASPECT = WIDTH / HEIGHT\n    , NEAR = 0.1\n    , FAR = 10000\n    // get the DOM element to attach to\n    , $container = $('#container')\n    // create a WebGL renderer, camera\n    // and a scene\n    , renderer = new THREE.WebGLRenderer()\n    , camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR)\n    , scene = new THREE.Scene()\n    , territoryGeometry = new THREE.Geometry()\n    , planeMaterial = new THREE.MeshBasicMaterial({\n        'color': 0xffff00,\n        'side': THREE.DoubleSide\n      })\n    , plane = new THREE.Mesh(territoryGeometry, planeMaterial)\n    // create a point light\n    , pointLight = new THREE.PointLight(0xFFFFFF);\n\n  // add the camera to the scene\n  scene.add(camera);\n\n  // the camera starts at 0,0,0\n  // so pull it back\n  camera.position.z = 300;\n\n  // start the renderer\n  renderer.setSize(WIDTH, HEIGHT);\n\n  // attach the render-supplied DOM element\n  $container.append(renderer.domElement);\n\n  territoryGeometry.vertices.push(\n    new THREE.Vector3(-10, 10, 0),\n    new THREE.Vector3(-10, -10, 0),\n    new THREE.Vector3(10, -10, 0)\n  );\n\n  territoryGeometry.faces.push( new THREE.Face3( 0, 1, 2 ) );\n\n  territoryGeometry.computeBoundingSphere();\n\n  scene.add(plane);\n\n  // set its position\n  pointLight.position.x = 10;\n  pointLight.position.y = 50;\n  pointLight.position.z = 130;\n\n  // add to the scene\n  scene.add(pointLight);\n\n  //draw\n  window.requestAnimationFrame(function updateTick() {\n\n    renderer.render(scene, camera);\n  });\n}(window));\n"]}